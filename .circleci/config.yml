version: 2.1

orbs:
  node: circleci/node@6.2.0
  #prodsec: snyk/prodsec-orb@1

defaults: &defaults
  resource_class: small
  docker:
    - image: cimg/node:20.18
  working_directory: ~/snyk-broker-config
filter-non-main-branches: &filter-non-main-branches
  filters:
    branches:
      ignore: main
filter-main-branch-only: &filter-main-branch-only
  filters:
    branches:
      only: main
filter-tags-only: &filter-tags-only
  filters:
    tags:
      only: /^v.*/
    branches:
      ignore: /.*/

commands:
  set-package-version:
    steps:
      - run:
          name: Set tag as version in package.json
          command: |
            npm version --commit-hooks false --git-tag-version false ${CIRCLE_TAG/v/''}
  install-github-release:
    parameters:
      version:
        type: string
        default: "v0.10.0"
    steps:
      - run:
          name: Install github-release
          command: |
            curl -L https://github.com/github-release/github-release/releases/download/<<parameters.version>>/linux-amd64-github-release.bz2 -o linux-amd64-github-release.bz2
            bzip2 -d linux-amd64-github-release.bz2
            chmod +x linux-amd64-github-release && sudo mv linux-amd64-github-release /usr/local/bin/github-release
      - run:
          name: Verify github-release
          command: github-release --version

jobs:
  build:
    <<: *defaults
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: Build package
          command: npm run build
  build-macos:
    macos:
      xcode: 16.4.0
    resource_class: macos.m1.medium.gen1
    steps:
      - checkout
      - attach_workspace:
          at: .
      - set-package-version
      - run:
          name: Build macOS .pkg installers
          command: |
            npm run build
            npm run prepack
            npm run pack:macos
      - persist_to_workspace:
          root: .
          paths:
            - dist/macos/
  build-win:
    macos:
      xcode: 16.4.0
    resource_class: macos.m1.medium.gen1
    steps:
      - checkout
      - attach_workspace:
          at: .
      - set-package-version
      - run:
          name: Build Windows installers
          command: |
            brew install nsis
            brew install p7zip
            npm run build
            npm run prepack
            npm run pack:win
      - persist_to_workspace:
          root: .
          paths:
            - dist/win32/
  build-linux:
    <<: *defaults
    steps:
      - checkout
      - attach_workspace:
          at: .
      - set-package-version
      - run:
          name: Build Linux tarballs
          command: |
            sudo apt-get update
            sudo apt-get install --assume-yes apt-utils
            npm run build
            npm run prepack
            npm run pack:linux
      - persist_to_workspace:
          root: .
          paths:
            - dist/deb/
  install-npm-packages:
    <<: *defaults
    environment:
      NODE_ENV: development
    steps:
      - checkout
      - node/install-packages:
          cache-only-lockfile: false
          cache-path: ./node_modules
          include-branch-in-cache-key: false
      - persist_to_workspace:
          root: .
          paths:
            - node_modules
  lint-npm:
    <<: *defaults
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: Lint
          command: npm run lint
  security-scans:
    <<: *defaults
    resource_class: medium
    steps:
      - checkout
      - attach_workspace:
          at: .
#      - prodsec/security_scans:
#          mode: auto
#          open-source-additional-arguments: --exclude=test
#          iac-scan-path: ./src
  test:
    <<: *defaults
    resource_class: medium
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: Run tests
          command: npm run test
  release:
    <<: *defaults
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: Release to GitHub and NPM
          command: |
            npx semantic-release
  upload-github-release-assets:
    <<: *defaults
    steps:
      - checkout
      - attach_workspace:
          at: .
      - install-github-release
      - run:
          name: Upload assets to GitHub release
          command: |
            CIRCLE_SHORT_SHA1=$(git rev-parse --short ${CIRCLE_SHA1})
            CLI_VERSION=${CIRCLE_TAG/v/''}-${CIRCLE_SHORT_SHA1}

            # linux
            github-release upload --user pavel-snyk --repo snyk-broker-config-testing --tag ${CIRCLE_TAG} --security-token ${GH_TOKEN} \
              --name snyk-broker-config_${CIRCLE_TAG/v/''}.${CIRCLE_SHORT_SHA1}-1_amd64.deb --file dist/deb/snyk-broker-config_${CIRCLE_TAG/v/''}.${CIRCLE_SHORT_SHA1}-1_amd64.deb
            github-release upload --user pavel-snyk --repo snyk-broker-config-testing --tag ${CIRCLE_TAG} --security-token ${GH_TOKEN} \
              --name snyk-broker-config_${CIRCLE_TAG/v/''}.${CIRCLE_SHORT_SHA1}-1_arm64.deb --file dist/deb/snyk-broker-config_${CIRCLE_TAG/v/''}.${CIRCLE_SHORT_SHA1}-1_arm64.deb
             github-release upload --user pavel-snyk --repo snyk-broker-config-testing --tag ${CIRCLE_TAG} --security-token ${GH_TOKEN} \
              --name snyk-broker-config_${CIRCLE_TAG/v/''}.${CIRCLE_SHORT_SHA1}-1_armel.deb --file dist/deb/snyk-broker-config_${CIRCLE_TAG/v/''}.${CIRCLE_SHORT_SHA1}-1_armel.deb

            # macos
            github-release upload --user pavel-snyk --repo snyk-broker-config-testing --tag ${CIRCLE_TAG} --security-token ${GH_TOKEN} \
              --name snyk-broker-config-v${CLI_VERSION}-arm64.pkg --file dist/macos/snyk-broker-config-v${CLI_VERSION}-arm64.pkg
            github-release upload --user pavel-snyk --repo snyk-broker-config-testing --tag ${CIRCLE_TAG} --security-token ${GH_TOKEN} \
              --name snyk-broker-config-v${CLI_VERSION}-x64.pkg --file dist/macos/snyk-broker-config-v${CLI_VERSION}-x64.pkg

            # win
            github-release upload --user pavel-snyk --repo snyk-broker-config-testing --tag ${CIRCLE_TAG} --security-token ${GH_TOKEN} \
              --name snyk-broker-config-v${CLI_VERSION}-arm64.exe --file dist/win32/snyk-broker-config-v${CLI_VERSION}-arm64.exe
            github-release upload --user pavel-snyk --repo snyk-broker-config-testing --tag ${CIRCLE_TAG} --security-token ${GH_TOKEN} \
              --name snyk-broker-config-v${CLI_VERSION}-x64.exe --file dist/win32/snyk-broker-config-v${CLI_VERSION}-x64.exe
            github-release upload --user pavel-snyk --repo snyk-broker-config-testing --tag ${CIRCLE_TAG} --security-token ${GH_TOKEN} \
              --name snyk-broker-config-v${CLI_VERSION}-x86.exe --file dist/win32/snyk-broker-config-v${CLI_VERSION}-x86.exe

workflows:
  version: 2
  CICD:
    jobs:
#      - prodsec/secrets-scan:
#          name: Scan repository for secrets
#          context:
#            - snyk-bot-slack
#          channel: broker-alerts-cicd
      - install-npm-packages:
          name: Install NPM packages
          context:
            - nodejs-install
#          requires:
#            - Scan repository for secrets
      - lint-npm:
          name: Lint source code
          requires:
            - Install NPM packages
      - security-scans:
          name: Snyk Security Scans
          context:
            - nodejs-install
            - platformeng_access
          requires:
            - Install NPM packages
          <<: *filter-non-main-branches
      - test:
          name: Run tests
          requires:
            - Install NPM packages
      - release:
          name: Release to GitHub and NPM
          context:
            - nodejs-lib-release
            - platformeng_access
            - team-hybrid-snyk
          requires:
            - Run tests
          <<: *filter-main-branch-only

  Release standalone installers:
    jobs:
      - install-npm-packages:
          name: Install NPM packages
          context:
            - nodejs-install
          <<: *filter-tags-only
      - build-linux:
          name: Build Linux tarballs
          requires:
            - Install NPM packages
          <<: *filter-tags-only
      - build-macos:
          name: Build macOS installer
          requires:
            - Install NPM packages
          <<: *filter-tags-only
      - build-win:
          name: Build Windows installer
          requires:
            - Install NPM packages
          <<: *filter-tags-only
      - upload-github-release-assets:
          name: Upload assets to GitHub release
          context:
            - nodejs-lib-release
            - team-hybrid-snyk
          requires:
            - Build Linux tarballs
            - Build macOS installer
            - Build Windows installer
          <<: *filter-tags-only
